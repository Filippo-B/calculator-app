@use '../index.scss' as *;

// @keyframes arrowLeft {
//   0% {
//     opacity: 100%;
//     transform: translateX(0rem);
//   }
//   80% {
//     opacity: 100%;
//     transform: translateX(0rem);
//   }
//   100% {
//     transform: translateX(-0.2rem);
//     opacity: 0;
//   }
// }

@mixin arrowAnimationKeyframes($animationName, $midpoint, $translate) {
  @keyframes #{$animationName} {
    0% {
      opacity: 100%;
      transform: translateX(0rem);
    }
    #{$midpoint} {
      opacity: 100%;
      transform: translateX(0rem);
    }
    100% {
      transform: translateX($translate);
      opacity: 0;
    }
  }
}

@mixin arrowAnimation($animationName) {
  animation-name: $animationName;
  animation-duration: 3s;
  animation-iteration-count: infinite;

  // I don't use the hhover state on the arrows itself because it leats to asynchronous animations.
  // When the hover is on the display, both animations start and stop at the same time.
  .display:hover & {
    animation: none;
  }
}

$arrowAnimationTranslate: 0.2rem;
@include arrowAnimationKeyframes(arrowLeft, 80%, $arrowAnimationTranslate * -1);
@include arrowAnimationKeyframes(arrowRight, 80%, $arrowAnimationTranslate);

.display {
  display: flex;
  align-items: center;
  margin-bottom: 0.8rem;
  height: 4rem;
  background-color: var(--screen-background);
  color: var(--text-color-2);
  text-align: right;
}

.display__arrow--left,
.display__arrow--right {
  display: flex; // it centers the arrows vertically
  cursor: pointer;
  pointer-events: visible;
  visibility: hidden;

  &.active {
    visibility: visible;
    animation-name: arrowLeft;
    animation-duration: 3s;
    animation-iteration-count: infinite;
  }
}

.display__arrow--right {
  justify-self: right;

  &.active {
    @include arrowAnimation(arrowRight);
  }
}

.display__arrow--left {
  &.active {
    @include arrowAnimation(arrowLeft);
  }
}

.display__content-container {
  width: 100%;
  text-align: right;
  font-size: 1.5rem;
  overflow: hidden;
  padding: 3px;
  position: relative;
  height: 60px;
  margin-left: auto;
}

.display__content {
  position: absolute;
  right: 0;
  top: 0.25rem;
}
